module auto_mode (  

input [3:0] temp,  

input clk, rst,  

output reg [1:0] speed,  
reg [6:0] d,  
reg [3:0] D1_AN  

);  

parameter s0 = 2'b00;  
parameter s1 = 2'b01;  
parameter s2 = 2'b10;  
parameter s3 = 2'b11;  

reg [1:0] current_state, next_state;  

always @(*) begin  

if (current_state == s0) begin  
    case (temp)  
        4'd0, 4'd1, 4'd2, 4'd3: next_state = s0;  
        4'd4, 4'd5, 4'd6, 4'd7: next_state = s1;  
        4'd8, 4'd9, 4'd10, 4'd11: next_state = s2;  
        4'd12, 4'd13, 4'd14, 4'd15: next_state = s3;  
    endcase  
end  

else if (current_state == s1) begin  
    case (temp)  
        4'd0, 4'd1, 4'd2, 4'd3: next_state = s0;  
        4'd4, 4'd5, 4'd6, 4'd7: next_state = s1;  
        4'd8, 4'd9, 4'd10, 4'd11: next_state = s2;  
        4'd12, 4'd13, 4'd14, 4'd15: next_state = s3;  
    endcase  
end  

else if (current_state == s2) begin  
    case (temp)  
        4'd0, 4'd1, 4'd2, 4'd3: next_state = s0;  
        4'd4, 4'd5, 4'd6, 4'd7: next_state = s1;  
        4'd8, 4'd9, 4'd10, 4'd11: next_state = s2;  
        4'd12, 4'd13, 4'd14, 4'd15: next_state = s3;  
    endcase  
end  

else if (current_state == s3) begin  
    case (temp)  
        4'd0, 4'd1, 4'd2, 4'd3: next_state = s0;  
        4'd4, 4'd5, 4'd6, 4'd7: next_state = s1;  
        4'd8, 4'd9, 4'd10, 4'd11: next_state = s2;  
        4'd12, 4'd13, 4'd14, 4'd15: next_state = s3;  
    endcase  
end  

end  

always @(posedge clk or posedge rst) begin  
    if (rst)  
        current_state <= s0;  
    else  
        current_state <= next_state;  
end  

always @(*) begin  
    case (current_state)  
        s0: speed = 2'b00;  
        s1: speed = 2'b01;  
        s2: speed = 2'b10;  
        s3: speed = 2'b11;  
        default: speed = 2'b00;  
    endcase  
end  

endmodule
